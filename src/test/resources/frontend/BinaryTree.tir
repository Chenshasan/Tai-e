---------- <BinaryTree: int factorial(int)> ----------
Parameters: int num
Variables:
BinaryTree %this
int num
int fact
int %intconst0
int %intconst1
int #temp$2
Statements:
[0@L-1] %intconst0 = 0;
[1@L-1] %intconst1 = 1;
[2@L20] fact = 1;
[3@L21] if (num == %intconst0) goto 5;
[4@L21] goto 6;
[5@L22] return %intconst1;
[6@L24] if (num > %intconst1) goto 8;
[7@L24] goto 12;
[8@L25] fact = fact * num;
[9@L26] #temp$2 = num;
[10@L26] num = num - %intconst1;
[11@L26] goto 6;
[12@L28] return fact;
---------- <BinaryTree: int numOfBST(int)> ----------
Parameters: int key
Variables:
BinaryTree %this
int key
int %intconst0
int #temp$1
int #temp$2
int %intconst3
int #temp$4
int #temp$5
int #temp$6
int #temp$7
int catalanNumber
Statements:
[0@L-1] %intconst0 = 2;
[1@L-1] %intconst3 = 1;
[2@L33] #temp$1 = %intconst0 * key;
[3@L33] #temp$2 = invokevirtual %this.<BinaryTree: int factorial(int)>(#temp$1);
[4@L33] #temp$4 = key + %intconst3;
[5@L33] #temp$5 = invokevirtual %this.<BinaryTree: int factorial(int)>(#temp$4);
[6@L33] #temp$6 = invokevirtual %this.<BinaryTree: int factorial(int)>(key);
[7@L33] #temp$7 = #temp$5 * #temp$6;
[8@L33] catalanNumber = #temp$2 / #temp$7;
[9@L34] return catalanNumber;
---------- <BinaryTree: void <init>()> ----------
Parameters: 
Variables:
BinaryTree %this
BinaryTree$Node temp$0
Statements:
[0@L16] invokespecial %this.<java.lang.Object: void <init>()>();
[1@L17] temp$0 = null;
[2@L17] %this.<BinaryTree: BinaryTree$Node root> = temp$0;
[3@L17] return;
---------- <BinaryTree: void main(java.lang.String[])> ----------
Parameters: java.lang.String[] args
Variables:
BinaryTree %this
java.lang.String[] args
BinaryTree #temp$0
BinaryTree bt
java.io.PrintStream #temp$1
java.lang.StringBuilder #temp$2
java.lang.String %stringconst3
int %intconst4
int #temp$5
java.lang.String #temp$6
Statements:
[0@L-1] %stringconst3 = "Total number of possible Binary Search Trees with given key: ";
[1@L-1] %intconst4 = 5;
[2@L37] #temp$0 = new BinaryTree;
[3@L37] invokespecial #temp$0.<BinaryTree: void <init>()>();
[4@L37] bt = #temp$0;
[5@L39] #temp$1 = <java.lang.System: java.io.PrintStream out>;
[6@L39] #temp$2 = new java.lang.StringBuilder;
[7@L39] invokespecial #temp$2.<java.lang.StringBuilder: void <init>()>();
[8@L39] invokevirtual #temp$2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(%stringconst3);
[9@L39] #temp$5 = invokevirtual bt.<BinaryTree: int numOfBST(int)>(%intconst4);
[10@L39] invokevirtual #temp$2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(#temp$5);
[11@L39] #temp$6 = invokevirtual #temp$2.<java.lang.Object: java.lang.String toString()>();
[12@L39] invokevirtual #temp$1.<java.io.PrintStream: void println(java.lang.String)>(#temp$6);
[13@L-1] return;
------------------------------

