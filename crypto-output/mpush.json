[ {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c4 = \"MD5withRSA\"",
  "sourceMethod" : "<com.mpush.tools.crypto.RSAUtils: boolean verify(byte[],java.lang.String,java.lang.String)>",
  "callSite" : "<com.mpush.tools.crypto.RSAUtils: boolean verify(byte[],java.lang.String,java.lang.String)>[1@L166] signature = invokestatic java.security.Signature.getInstance($-c4)",
  "var" : "$-c4",
  "constantValue" : "MD5withRSA",
  "calleeMethod" : "<java.security.Signature: java.security.Signature getInstance(java.lang.String)>",
  "subSignature" : "boolean verify(byte[],java.lang.String,java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c3 = \"MD5withRSA\"",
  "sourceMethod" : "<com.mpush.tools.crypto.RSAUtils: java.lang.String sign(byte[],java.lang.String)>",
  "callSite" : "<com.mpush.tools.crypto.RSAUtils: java.lang.String sign(byte[],java.lang.String)>[1@L150] signature = invokestatic java.security.Signature.getInstance($-c3)",
  "var" : "$-c3",
  "constantValue" : "MD5withRSA",
  "calleeMethod" : "<java.security.Signature: java.security.Signature getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String sign(byte[],java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c10 = \"HmacSHA1\"",
  "sourceMethod" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String hmacSha1(java.lang.String,java.lang.String)>",
  "callSite" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String hmacSha1(java.lang.String,java.lang.String)>[8@L93] mac = invokestatic javax.crypto.Mac.getInstance($-c10)",
  "var" : "$-c10",
  "constantValue" : "HmacSHA1",
  "calleeMethod" : "<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String hmacSha1(java.lang.String,java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c7 = \"MD5\"",
  "sourceMethod" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String encrypt(java.io.File)>",
  "callSite" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String encrypt(java.io.File)>[2@L42] digest = invokestatic java.security.MessageDigest.getInstance($-c7)",
  "var" : "$-c7",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String encrypt(java.io.File)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c2 = \"MD5\"",
  "sourceMethod" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String encrypt(java.lang.String)>",
  "callSite" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String encrypt(java.lang.String)>[1@L60] digest = invokestatic java.security.MessageDigest.getInstance($-c2)",
  "var" : "$-c2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String encrypt(java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c2 = \"MD5\"",
  "sourceMethod" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String encrypt(byte[])>",
  "callSite" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String encrypt(byte[])>[1@L70] digest = invokestatic java.security.MessageDigest.getInstance($-c2)",
  "var" : "$-c2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String encrypt(byte[])"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c2 = \"SHA-1\"",
  "sourceMethod" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String sha1(java.lang.String)>",
  "callSite" : "<com.mpush.tools.crypto.MD5Utils: java.lang.String sha1(java.lang.String)>[1@L105] digest = invokestatic java.security.MessageDigest.getInstance($-c2)",
  "var" : "$-c2",
  "constantValue" : "SHA-1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String sha1(java.lang.String)"
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Number Size",
    "message" : "The number size is not allowed for the API",
    "sourceStmt" : "keySize = 1024",
    "sourceMethod" : "<com.mpush.tools.crypto.RSAUtils: void main(java.lang.String[])>",
    "callSite" : "<com.mpush.tools.crypto.RSAUtils: com.mpush.tools.common.Pair genKeyPair(int)>[2@L90] invokevirtual keyPairGen.initialize(rsaKeySize)",
    "var" : "rsaKeySize",
    "constantValue" : "1024",
    "calleeMethod" : "<java.security.KeyPairGenerator: void initialize(int)>",
    "numberSize" : "2048-10000",
    "subSignature" : "com.mpush.tools.common.Pair genKeyPair(int)"
  } ]
} ]