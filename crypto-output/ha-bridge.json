[ {
  "judgeType" : "Predictable Source",
  "message" : "The value of the API is not well randomized",
  "sourceStmt" : "$-v3[$-ci7] = $-ci18",
  "sourceMethod" : "<com.bwssystems.HABridge.BridgeSecurity: void <clinit>()>",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String decrypt(java.lang.String)>[10@L343] invokespecial $-v10.<init>($-v12, $-ci20)",
  "var" : "$-v12",
  "calleeMethod" : "<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>",
  "subSignature" : "java.lang.String decrypt(java.lang.String)"
}, {
  "judgeType" : "Predictable Source",
  "message" : "The value of the API is not well randomized",
  "sourceStmt" : "$-v3[$-ci7] = $-ci18",
  "sourceMethod" : "<com.bwssystems.HABridge.BridgeSecurity: void <clinit>()>",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String encrypt(java.lang.String)>[10@L331] invokespecial $-v10.<init>($-v12, $-ci20)",
  "var" : "$-v12",
  "calleeMethod" : "<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>",
  "subSignature" : "java.lang.String encrypt(java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c8 = \"PBEWithMD5AndDES\"",
  "sourceMethod" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String decrypt(java.lang.String)>",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String decrypt(java.lang.String)>[7@L342] pbeCipher = invokestatic javax.crypto.Cipher.getInstance($-c8)",
  "var" : "$-c8",
  "constantValue" : "PBEWithMD5AndDES",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String decrypt(java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c8 = \"PBEWithMD5AndDES\"",
  "sourceMethod" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String encrypt(java.lang.String)>",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String encrypt(java.lang.String)>[7@L330] pbeCipher = invokestatic javax.crypto.Cipher.getInstance($-c8)",
  "var" : "$-c8",
  "constantValue" : "PBEWithMD5AndDES",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String encrypt(java.lang.String)"
}, {
  "judgeType" : "Forbidden Method",
  "message" : "The method is forbidden from being used",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String decrypt(java.lang.String)>[4@L341] invokespecial $-v6.<init>($-v7)",
  "calleeMethod" : "<javax.crypto.spec.PBEKeySpec: void <init>(char[])>",
  "subSignature" : "java.lang.String decrypt(java.lang.String)"
}, {
  "judgeType" : "Forbidden Method",
  "message" : "The method is forbidden from being used",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String encrypt(java.lang.String)>[4@L329] invokespecial $-v6.<init>($-v7)",
  "calleeMethod" : "<javax.crypto.spec.PBEKeySpec: void <init>(char[])>",
  "subSignature" : "java.lang.String encrypt(java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c5 = \"PBEWithMD5AndDES\"",
  "sourceMethod" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String decrypt(java.lang.String)>",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String decrypt(java.lang.String)>[1@L340] keyFactory = invokestatic javax.crypto.SecretKeyFactory.getInstance($-c5)",
  "var" : "$-c5",
  "constantValue" : "PBEWithMD5AndDES",
  "calleeMethod" : "<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String decrypt(java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c5 = \"PBEWithMD5AndDES\"",
  "sourceMethod" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String encrypt(java.lang.String)>",
  "callSite" : "<com.bwssystems.HABridge.BridgeSecurity: java.lang.String encrypt(java.lang.String)>[1@L328] keyFactory = invokestatic javax.crypto.SecretKeyFactory.getInstance($-c5)",
  "var" : "$-c5",
  "constantValue" : "PBEWithMD5AndDES",
  "calleeMethod" : "<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String encrypt(java.lang.String)"
} ]