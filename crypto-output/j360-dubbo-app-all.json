[ {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c7 = \"AES\"",
  "sourceMethod" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>",
  "callSite" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>[4@L140] cipher = invokestatic javax.crypto.Cipher.getInstance($-c7)",
  "var" : "$-c7",
  "constantValue" : "AES",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "byte[] aes(byte[],byte[],int)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c2 = \"HmacSHA1\"",
  "sourceMethod" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateHmacSha1Key()>",
  "callSite" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateHmacSha1Key()>[1@L76] keyGenerator = invokestatic javax.crypto.KeyGenerator.getInstance($-c2)",
  "var" : "$-c2",
  "constantValue" : "HmacSHA1",
  "calleeMethod" : "<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>",
  "subSignature" : "byte[] generateHmacSha1Key()"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c5 = \"HmacSHA1\"",
  "sourceMethod" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>",
  "callSite" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>[2@L50] invokespecial secretKey.<init>(key, $-c5)",
  "var" : "$-c5",
  "constantValue" : "HmacSHA1",
  "calleeMethod" : "<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>",
  "subSignature" : "byte[] hmacSha1(byte[],byte[])"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c6 = \"HmacSHA1\"",
  "sourceMethod" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>",
  "callSite" : "<me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>[4@L51] mac = invokestatic javax.crypto.Mac.getInstance($-c6)",
  "var" : "$-c6",
  "constantValue" : "HmacSHA1",
  "calleeMethod" : "<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>",
  "subSignature" : "byte[] hmacSha1(byte[],byte[])"
} ]