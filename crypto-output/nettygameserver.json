[ {
  "judgeType" : "Number Size",
  "message" : "The number size is not allowed for the API",
  "sourceStmt" : "",
  "sourceMethod" : "",
  "callSite" : "<com.snowcattle.game.common.util.DesEncrypter: void <init>(java.lang.String,byte[])>[49@L40] invokespecial paramSpec.<init>($-v38, $-v39)",
  "var" : "$-v39",
  "constantValue" : "",
  "calleeMethod" : "<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>",
  "numberSize" : "1000-50000",
  "subSignature" : "void <init>(java.lang.String,byte[])"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c4 = \"AES\"",
  "sourceMethod" : "<com.snowcattle.game.common.util.AES: byte[] encrypt(byte[],java.lang.String)>",
  "callSite" : "<com.snowcattle.game.common.util.AES: byte[] encrypt(byte[],java.lang.String)>[2@L30] cipher = invokestatic javax.crypto.Cipher.getInstance($-c4)",
  "var" : "$-c4",
  "constantValue" : "AES",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "byte[] encrypt(byte[],java.lang.String)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c4 = \"AES\"",
  "sourceMethod" : "<com.snowcattle.game.common.util.AES: byte[] decrypt(byte[],java.lang.String)>",
  "callSite" : "<com.snowcattle.game.common.util.AES: byte[] decrypt(byte[],java.lang.String)>[2@L44] cipher = invokestatic javax.crypto.Cipher.getInstance($-c4)",
  "var" : "$-c4",
  "constantValue" : "AES",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "byte[] decrypt(byte[],java.lang.String)"
}, {
  "judgeType" : "Number Size",
  "message" : "The number size is not allowed for the API",
  "sourceStmt" : "",
  "sourceMethod" : "",
  "callSite" : "<com.snowcattle.game.common.util.DesEncrypter: void <init>(java.lang.String,byte[])>[36@L34] invokespecial keySpec.<init>($-v27, $-v28, $-v29)",
  "var" : "$-v29",
  "constantValue" : "",
  "calleeMethod" : "<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>",
  "numberSize" : "1000-50000",
  "subSignature" : "void <init>(java.lang.String,byte[])"
}, {
  "judgeType" : "Predictable Source",
  "message" : "The value of the API is not well randomized",
  "sourceStmt" : "",
  "sourceMethod" : "",
  "callSite" : "<com.snowcattle.game.common.util.AES: byte[] encrypt(byte[],java.lang.String)>[6@L31] invokespecial securekey.<init>($-v8, $-c7)",
  "var" : "$-v8",
  "calleeMethod" : "<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>",
  "subSignature" : "byte[] encrypt(byte[],java.lang.String)"
}, {
  "judgeType" : "Predictable Source",
  "message" : "The value of the API is not well randomized",
  "sourceStmt" : "",
  "sourceMethod" : "",
  "callSite" : "<com.snowcattle.game.common.util.AES: byte[] decrypt(byte[],java.lang.String)>[6@L45] invokespecial securekey.<init>($-v8, $-c7)",
  "var" : "$-v8",
  "calleeMethod" : "<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>",
  "subSignature" : "byte[] decrypt(byte[],java.lang.String)"
}, {
  "judgeType" : "Predictable Source",
  "message" : "The value of the API is not well randomized",
  "sourceStmt" : "$-v7[$-ci7] = $-c23",
  "sourceMethod" : "<com.snowcattle.game.common.util.DesEncrypter: void <init>(java.lang.String,byte[])>",
  "callSite" : "<com.snowcattle.game.common.util.DesEncrypter: void <init>(java.lang.String,byte[])>[49@L40] invokespecial paramSpec.<init>($-v38, $-v39)",
  "var" : "$-v38",
  "calleeMethod" : "<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>",
  "subSignature" : "void <init>(java.lang.String,byte[])"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c30 = \"PBEWithMD5AndDES\"",
  "sourceMethod" : "<com.snowcattle.game.common.util.DesEncrypter: void <init>(java.lang.String,byte[])>",
  "callSite" : "<com.snowcattle.game.common.util.DesEncrypter: void <init>(java.lang.String,byte[])>[38@L35] $-v31 = invokestatic javax.crypto.SecretKeyFactory.getInstance($-c30)",
  "var" : "$-c30",
  "constantValue" : "PBEWithMD5AndDES",
  "calleeMethod" : "<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>",
  "subSignature" : "void <init>(java.lang.String,byte[])"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "$-c9 = \"MD5\"",
  "sourceMethod" : "<com.snowcattle.game.common.util.MD5Util: java.lang.String encodeByMD5(java.lang.String)>",
  "callSite" : "<com.snowcattle.game.common.util.MD5Util: java.lang.String encodeByMD5(java.lang.String)>[4@L47] md = invokestatic java.security.MessageDigest.getInstance($-c9)",
  "var" : "$-c9",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "java.lang.String encodeByMD5(java.lang.String)"
} ]