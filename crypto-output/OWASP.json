[ {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00046: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00046: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L50] $r34 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00708: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00708: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L53] $r35 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01167: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01167: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L56] $r37 = invokestatic java.security.MessageDigest.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01504: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01504: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L51] $r7 = invokestatic java.security.MessageDigest.getInstance(%stringconst2)",
  "var" : "%stringconst2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02675: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02675: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[8@L50] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst2)",
  "var" : "%stringconst2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01653: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01653: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L73] $r8 = invokestatic java.security.MessageDigest.getInstance(%stringconst6)",
  "var" : "%stringconst6",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02674: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02674: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[8@L50] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst2)",
  "var" : "%stringconst2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01247: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01247: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[11@L49] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst2)",
  "var" : "%stringconst2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00272: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00272: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[26@L75] $r38 = invokestatic java.security.MessageDigest.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00637: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00637: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L56] $r4 = invokestatic java.security.MessageDigest.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00537: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00537: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L63] $r4 = invokestatic java.security.MessageDigest.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00963: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00963: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L68] $r38 = invokestatic java.security.MessageDigest.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01334: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01334: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L53] $r37 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01038: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01038: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L54] $r7 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00073: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00073: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L87] $r39 = invokestatic java.security.MessageDigest.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00536: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00536: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[44@L68] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst9)",
  "var" : "%stringconst9",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02475: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02475: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L51] $r34 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00372: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00372: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L54] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01333: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01333: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L53] $r37 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02388: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02388: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[11@L51] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst2)",
  "var" : "%stringconst2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02575: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02575: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[32@L73] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst6)",
  "var" : "%stringconst6",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02217: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02217: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L53] $r36 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00794: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00794: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[40@L76] $r38 = invokestatic java.security.MessageDigest.getInstance(%stringconst8)",
  "var" : "%stringconst8",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02476: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02476: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L51] $r34 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00465: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00465: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L56] $r37 = invokestatic java.security.MessageDigest.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02387: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02387: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[11@L51] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst2)",
  "var" : "%stringconst2",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01577: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01577: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L51] $r35 = invokestatic java.security.MessageDigest.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"MD5\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02311: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02311: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L63] $r4 = invokestatic java.security.MessageDigest.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "MD5",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00853: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00853: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L62] $r10 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, $r9)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01318: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01318: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L64] $r61 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, $r60)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00608: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00608: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[29@L72] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, $r6)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00685: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00685: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L66] $r62 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, $r61)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01015: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01015: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L65] $r10 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, $r9)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01480: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01480: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L62] $r10 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, $r9)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00684: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00684: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L62] $r59 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, $r58)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00611: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00611: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L67] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, $r6)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst11 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00119: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00119: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[49@L85] $r20 = invokestatic javax.crypto.Cipher.getInstance(%stringconst11, $r19)",
  "var" : "%stringconst11",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02017: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02017: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L67] $r60 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, $r59)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01099: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01099: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L75] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, $r8)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00609: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00609: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L64] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, $r8)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01317: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01317: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L64] $r61 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, $r60)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01823: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01823: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[29@L79] $r61 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, $r60)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01634: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01634: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[40@L84] $r11 = invokestatic javax.crypto.Cipher.getInstance(%stringconst8, $r10)",
  "var" : "%stringconst8",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02018: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02018: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L67] $r60 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, $r59)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00521: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00521: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[44@L79] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst8, $r5)",
  "var" : "%stringconst8",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02658: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02658: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L61] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, $r7)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst11 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00610: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00610: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[50@L83] $r20 = invokestatic javax.crypto.Cipher.getInstance(%stringconst11, $r19)",
  "var" : "%stringconst11",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00120: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00120: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L69] $r63 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, $r62)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02019: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02019: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L67] $r60 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, $r59)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02458: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02458: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L62] $r58 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, $r57)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00053: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00053: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L84] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst9, $r5)",
  "var" : "%stringconst9",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00254: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00254: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L74] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, $r5)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5PADDING\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01822: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01822: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[29@L79] $r61 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, $r60)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5PADDING",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01322: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01322: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L63] $r39 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01105: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01105: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L68] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01230: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01230: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L53] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00856: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00856: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[44@L80] $r21 = invokestatic javax.crypto.Cipher.getInstance(%stringconst9)",
  "var" : "%stringconst9",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01153: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01153: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[26@L70] $r42 = invokestatic javax.crypto.Cipher.getInstance($r41)",
  "var" : "$r41",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01898: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01898: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L64] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01567: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01567: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L65] $r40 = invokestatic javax.crypto.Cipher.getInstance($r39)",
  "var" : "$r39",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02022: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02022: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L60] $r41 = invokestatic javax.crypto.Cipher.getInstance($r40)",
  "var" : "$r40",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01020: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01020: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L58] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01901: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01901: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L68] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01486: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01486: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L61] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00130: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00130: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L87] $r42 = invokestatic javax.crypto.Cipher.getInstance($r41)",
  "var" : "$r41",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00019: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00019: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L51] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01325: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01325: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L57] $r42 = invokestatic javax.crypto.Cipher.getInstance($r41)",
  "var" : "$r41",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01742: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01742: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L54] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01229: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01229: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L59] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02298: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02298: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[42@L77] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00210: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00210: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L77] $r41 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01897: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01897: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L64] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00616: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00616: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L55] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00618: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00618: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L70] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00358: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00358: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[23@L64] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00614: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00614: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L71] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00451: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00451: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L72] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01978: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01978: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[26@L74] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01830: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01830: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[32@L72] $r42 = invokestatic javax.crypto.Cipher.getInstance($r41)",
  "var" : "$r41",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst10 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00355: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00355: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[50@L73] $r22 = invokestatic javax.crypto.Cipher.getInstance($r21)",
  "var" : "$r21",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01106: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01106: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L68] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01741: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01741: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L54] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01740: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01740: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L54] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00617: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00617: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L56] $r13 = invokestatic javax.crypto.Cipher.getInstance($r12)",
  "var" : "$r12",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01401: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01401: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[44@L77] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00781: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00781: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L83] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00357: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00357: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L63] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02663: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02663: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L54] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01641: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01641: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[43@L77] $r13 = invokestatic javax.crypto.Cipher.getInstance($r12)",
  "var" : "$r12",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00693: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00693: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L64] $r37 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01638: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01638: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[38@L83] $r10 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02660: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02660: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L60] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01981: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01981: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L68] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02374: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02374: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L61] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02550: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02550: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[36@L83] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02194: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02194: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L63] $r38 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01022: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01022: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L68] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00615: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00615: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L67] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst8)",
  "var" : "%stringconst8",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01102: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01102: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L74] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01150: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01150: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L66] $r39 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01228: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01228: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L59] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01021: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01021: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L68] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00127: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00127: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L78] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00124: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00124: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L69] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00945: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00945: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L72] $r43 = invokestatic javax.crypto.Cipher.getInstance($r42)",
  "var" : "$r42",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02293: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02293: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L73] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01566: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01566: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L55] $r40 = invokestatic javax.crypto.Cipher.getInstance($r39)",
  "var" : "$r39",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00946: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00946: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L72] $r43 = invokestatic javax.crypto.Cipher.getInstance($r42)",
  "var" : "$r42",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00059: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00059: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[36@L83] $r44 = invokestatic javax.crypto.Cipher.getInstance($r43)",
  "var" : "$r43",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01639: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01639: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[38@L83] $r10 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01107: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01107: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L68] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00123: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00123: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L64] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02296: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02296: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[42@L77] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00859: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00859: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L59] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00214: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00214: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L78] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00057: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00057: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[32@L83] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst8)",
  "var" : "%stringconst8",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02103: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02103: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L63] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00446: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00446: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[23@L68] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00445: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00445: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[49@L83] $r52 = invokestatic javax.crypto.Cipher.getInstance(%stringconst9)",
  "var" : "%stringconst9",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00005: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00005: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L63] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01565: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01565: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L61] $r37 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02552: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02552: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[41@L87] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02661: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02661: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L60] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00857: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00857: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[23@L79] $r38 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02297: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02297: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[42@L77] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01018: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01018: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L64] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02195: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02195: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L63] $r38 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01900: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01900: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L58] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00354: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00354: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L60] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00035: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00035: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[41@L66] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00129: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00129: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L68] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00213: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00213: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[42@L88] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00691: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00691: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L71] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01829: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01829: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[32@L72] $r42 = invokestatic javax.crypto.Cipher.getInstance($r41)",
  "var" : "$r41",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00356: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00356: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[23@L58] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02023: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02023: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L60] $r41 = invokestatic javax.crypto.Cipher.getInstance($r40)",
  "var" : "$r40",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00128: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00128: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L73] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02024: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02024: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L70] $r41 = invokestatic javax.crypto.Cipher.getInstance($r40)",
  "var" : "$r40",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02373: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02373: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L61] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01108: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01108: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L78] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01103: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01103: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L74] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02294: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02294: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L73] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01323: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01323: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L63] $r39 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01489: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01489: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L55] $r12 = invokestatic javax.crypto.Cipher.getInstance($r11)",
  "var" : "$r11",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00449: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00449: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L60] $r42 = invokestatic javax.crypto.Cipher.getInstance($r41)",
  "var" : "$r41",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01982: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01982: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L78] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02295: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02295: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L73] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00692: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00692: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L61] $r36 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00448: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00448: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L62] $r9 = invokestatic javax.crypto.Cipher.getInstance($r8)",
  "var" : "$r8",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02375: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02375: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L55] $r11 = invokestatic javax.crypto.Cipher.getInstance($r10)",
  "var" : "$r10",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00125: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00125: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L64] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst10 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00524: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00524: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[72@L97] $r22 = invokestatic javax.crypto.Cipher.getInstance($r21)",
  "var" : "$r21",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DESede/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01980: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01980: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L68] $r10 = invokestatic javax.crypto.Cipher.getInstance($r9)",
  "var" : "$r9",
  "constantValue" : "DESede/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst10 = \"AES/ECB/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00450: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00450: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[54@L87] $r55 = invokestatic javax.crypto.Cipher.getInstance($r54)",
  "var" : "$r54",
  "constantValue" : "AES/ECB/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00631: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00631: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L59] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00532: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00532: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[64@L83] $r16 = invokestatic java.security.MessageDigest.getInstance(%stringconst8, %stringconst9)",
  "var" : "%stringconst8",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00267: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00267: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L64] r44 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02386: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02386: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L51] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00634: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00634: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L61] $r4 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00533: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00533: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[45@L73] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01651: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01651: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[35@L73] $r8 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00636: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00636: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L51] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01244: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01244: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L56] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02670: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02670: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L57] r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02211: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02211: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L53] $r39 = invokestatic java.security.MessageDigest.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00141: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00141: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L66] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02118: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02118: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L56] r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00870: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00870: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[10@L50] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02308: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02308: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L63] $r4 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01166: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01166: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L56] $r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00790: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00790: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L73] $r7 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01123: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01123: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L64] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01165: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01165: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L56] $r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00703: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00703: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[32@L68] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01761: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01761: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[11@L50] $r7 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00872: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00872: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L51] $r4 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst10 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00266: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00266: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[34@L68] r44 = invokestatic java.security.MessageDigest.getInstance(%stringconst10, %stringconst11)",
  "var" : "%stringconst10",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00705: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00705: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L57] $r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst8, %stringconst9)",
  "var" : "%stringconst8",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00223: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00223: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[41@L76] r46 = invokestatic java.security.MessageDigest.getInstance(%stringconst8, %stringconst9)",
  "var" : "%stringconst8",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00070: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00070: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[29@L73] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01503: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01503: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L58] r42 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02474: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02474: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L51] $r37 = invokestatic java.security.MessageDigest.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00869: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00869: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[28@L76] r42 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00961: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00961: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[26@L68] $r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00534: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00534: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[44@L82] $r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01846: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01846: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L75] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01411: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01411: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[36@L63] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01845: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01845: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L75] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02213: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02213: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L53] $r39 = invokestatic java.security.MessageDigest.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00789: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00789: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[40@L80] $r5 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00268: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00268: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L61] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00346: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00346: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L55] r38 = invokestatic java.security.MessageDigest.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02042: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02042: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L56] $r39 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00462: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00462: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L70] r45 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02212: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02212: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L53] $r39 = invokestatic java.security.MessageDigest.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02574: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02574: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L73] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00371: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00371: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L54] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01649: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01649: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[35@L73] $r8 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01650: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01650: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[35@L73] $r8 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00871: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00871: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L55] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00464: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00464: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L56] $r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00071: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00071: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[29@L73] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00868: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00868: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[47@L77] r54 = invokestatic java.security.MessageDigest.getInstance(%stringconst8, %stringconst9)",
  "var" : "%stringconst8",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01844: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01844: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L75] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02385: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02385: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L58] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02573: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02573: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[33@L73] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02307: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02307: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[40@L70] r44 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02671: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02671: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L57] r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01911: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01911: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L61] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01246: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01246: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L49] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00704: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00704: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L61] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00531: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00531: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[51@L75] r46 = invokestatic java.security.MessageDigest.getInstance(%stringconst9, %stringconst10)",
  "var" : "%stringconst9",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01757: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01757: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L57] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00269: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00269: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L61] $r3 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst2 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00635: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00635: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L51] $r6 = invokestatic java.security.MessageDigest.getInstance(%stringconst2, %stringconst3)",
  "var" : "%stringconst2",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01845: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01845: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L73] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, $r29)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01844: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01844: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L73] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, $r29)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00703: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00703: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[29@L66] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, $r31)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00704: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00704: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L59] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r30)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00223: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00223: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[38@L74] r46 = invokestatic java.security.MessageDigest.getInstance(%stringconst8, $r32)",
  "var" : "%stringconst8",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01911: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01911: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L59] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, $r32)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00868: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00868: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[44@L75] r54 = invokestatic java.security.MessageDigest.getInstance(%stringconst8, $r46)",
  "var" : "%stringconst8",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00267: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00267: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L62] r44 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, $r29)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02118: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02118: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[15@L54] r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r31)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst9 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00531: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00531: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[48@L73] r46 = invokestatic java.security.MessageDigest.getInstance(%stringconst9, $r32)",
  "var" : "%stringconst9",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02307: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02307: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L68] r44 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r31)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01757: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01757: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L55] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r34)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00869: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00869: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L74] r42 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, $r32)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01846: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01846: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L73] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, $r29)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02670: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02670: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L55] r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r32)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02385: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02385: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L56] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r32)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02671: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02671: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L55] r40 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r32)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00346: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00346: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[10@L53] r38 = invokestatic java.security.MessageDigest.getInstance(%stringconst3, $r30)",
  "var" : "%stringconst3",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00462: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00462: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[30@L68] r45 = invokestatic java.security.MessageDigest.getInstance(%stringconst6, $r31)",
  "var" : "%stringconst6",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00141: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00141: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L64] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst7, $r31)",
  "var" : "%stringconst7",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00631: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00631: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L57] r43 = invokestatic java.security.MessageDigest.getInstance(%stringconst5, $r34)",
  "var" : "%stringconst5",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01244: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01244: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[17@L54] r41 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r33)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01503: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01503: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L56] r42 = invokestatic java.security.MessageDigest.getInstance(%stringconst4, $r34)",
  "var" : "%stringconst4",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst10 = \"SHA1\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00266: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00266: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L66] r44 = invokestatic java.security.MessageDigest.getInstance(%stringconst10, $r29)",
  "var" : "%stringconst10",
  "constantValue" : "SHA1",
  "calleeMethod" : "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00855: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00855: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L71] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01637: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01637: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[39@L84] $r10 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02291: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02291: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[38@L74] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00688: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00688: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[25@L69] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00258: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00258: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L67] $r63 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst8 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00056: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00056: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[39@L89] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst8, %stringconst9)",
  "var" : "%stringconst8",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00050: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00050: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[12@L60] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02101: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02101: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[14@L60] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02290: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02290: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[38@L74] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01484: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01484: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L62] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02549: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02549: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L84] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00208: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00208: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[32@L80] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02020: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02020: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[20@L67] $r63 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01016: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01016: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L65] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01895: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01895: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[16@L65] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01483: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01483: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L62] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00256: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00256: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[31@L77] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02192: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02192: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L64] $r63 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02193: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02193: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[19@L64] $r63 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00522: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00522: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[43@L79] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00779: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00779: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[36@L84] $r7 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01149: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01149: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L67] $r64 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01017: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01017: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[18@L65] $r9 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00257: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00257: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[24@L68] $r65 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst7 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02548: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02548: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[37@L84] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst7, %stringconst8)",
  "var" : "%stringconst7",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01398: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01398: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[40@L74] $r8 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst4 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01320: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01320: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[21@L64] $r64 = invokestatic javax.crypto.Cipher.getInstance(%stringconst4, %stringconst5)",
  "var" : "%stringconst4",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01148: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01148: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[22@L67] $r64 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst5 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02292: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02292: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[38@L74] $r6 = invokestatic javax.crypto.Cipher.getInstance(%stringconst5, %stringconst6)",
  "var" : "%stringconst5",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst3 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00020: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00020: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[13@L59] $r5 = invokestatic javax.crypto.Cipher.getInstance(%stringconst3, %stringconst4)",
  "var" : "%stringconst3",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "Pattern Match",
  "message" : "The pattern is not matched for the API",
  "sourceStmt" : "%stringconst6 = \"DES/CBC/PKCS5Padding\"",
  "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00055: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
  "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00055: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[27@L79] $r64 = invokestatic javax.crypto.Cipher.getInstance(%stringconst6, %stringconst7)",
  "var" : "%stringconst6",
  "constantValue" : "DES/CBC/PKCS5Padding",
  "calleeMethod" : "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>",
  "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01041: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L84] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01041: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01041: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L82] invokevirtual $r49.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02392: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[60@L81] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02392: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02392: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[65@L79] invokevirtual $r48.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00876: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L85] $r20 = invokeinterface $r19.encodeForBase64($r12, %intconst7)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00876: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00876: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L83] invokevirtual $r47.write($r23)",
    "var" : "$r23",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00274: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[63@L86] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst7)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00274: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00274: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[68@L84] invokevirtual $r48.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00374: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[59@L81] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00374: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00374: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[64@L79] invokevirtual $r47.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01248: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[60@L79] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01248: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01248: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[65@L77] invokevirtual $r48.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00074: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[81@L103] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst4)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00074: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00074: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[86@L101] invokevirtual $r52.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01579: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[63@L81] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01579: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01579: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[68@L79] invokevirtual $r48.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00273: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[75@L96] $r20 = invokeinterface $r19.encodeForBase64($r12, %intconst9)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00273: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00273: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[80@L94] invokevirtual $r52.write($r23)",
    "var" : "$r23",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00796: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[91@L108] $r23 = invokeinterface $r22.encodeForBase64($r15, %intconst14)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00796: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00796: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[96@L106] invokevirtual $r54.write($r26)",
    "var" : "$r26",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01124: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[72@L94] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01124: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01124: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[77@L92] invokevirtual $r52.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02121: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[58@L79] $r20 = invokeinterface $r19.encodeForBase64($r12, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02121: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02121: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[63@L77] invokevirtual $r46.write($r23)",
    "var" : "$r23",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01042: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L84] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01042: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01042: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L82] invokevirtual $r49.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01415: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[82@L93] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst3)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01415: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01415: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[87@L91] invokevirtual $r52.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02478: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[61@L81] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02478: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02478: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[66@L79] invokevirtual $r46.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01414: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[82@L93] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst3)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01414: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01414: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[87@L91] invokevirtual $r52.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01765: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[59@L80] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01765: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01765: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[64@L78] invokevirtual $r49.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01168: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[65@L86] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst7)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01168: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01168: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[70@L84] invokevirtual $r50.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01654: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[82@L103] $r23 = invokeinterface $r22.encodeForBase64($r15, %intconst9)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01654: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01654: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[87@L101] invokevirtual $r53.write($r26)",
    "var" : "$r26",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01766: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[59@L80] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01766: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01766: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[64@L78] invokevirtual $r49.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02219: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L83] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02219: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02219: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L81] invokevirtual $r48.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01043: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L84] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01043: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01043: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L82] invokevirtual $r49.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02391: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[60@L81] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02391: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02391: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[65@L79] invokevirtual $r48.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01416: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[82@L93] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst3)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01416: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01416: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[87@L91] invokevirtual $r52.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01997: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[70@L94] $r20 = invokeinterface $r19.encodeForBase64($r12, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01997: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01997: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[75@L92] invokevirtual $r50.write($r23)",
    "var" : "$r23",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00710: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[61@L81] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00710: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00710: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[66@L79] invokevirtual $r46.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02677: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[57@L80] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02677: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02677: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L78] invokevirtual $r47.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00003: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[70@L97] $r13 = invokeinterface $r12.encodeForBase64($r5, %intconst4)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00003: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00003: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[75@L95] invokevirtual $r49.write($r16)",
    "var" : "$r16",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01580: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[63@L81] $r12 = invokeinterface $r11.encodeForBase64($r4, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01580: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01580: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[68@L79] invokevirtual $r48.write($r15)",
    "var" : "$r15",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00143: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[72@L103] $r14 = invokeinterface $r13.encodeForBase64($r6, %intconst7)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00143: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00143: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[77@L101] invokevirtual $r49.write($r17)",
    "var" : "$r17",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01996: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[70@L94] $r20 = invokeinterface $r19.encodeForBase64($r12, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01996: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01996: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[75@L92] invokevirtual $r50.write($r23)",
    "var" : "$r23",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00875: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[69@L90] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00875: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00875: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[74@L88] invokevirtual $r51.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest01044: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L84] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest01044: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest01044: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L82] invokevirtual $r49.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00227: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[101@L115] $r32 = invokeinterface $r31.encodeForBase64($r24, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00227: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00227: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[106@L113] invokevirtual $r67.write($r35)",
    "var" : "$r35",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00638: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[60@L81] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00638: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00638: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[65@L79] invokevirtual $r48.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00797: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[94@L107] $r15 = invokeinterface $r14.encodeForBase64($r7, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00797: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00797: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[99@L105] invokevirtual $r56.write($r18)",
    "var" : "$r18",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02577: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[80@L103] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst9)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02577: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02577: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[85@L101] invokevirtual $r51.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00226: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[83@L100] $r22 = invokeinterface $r21.encodeForBase64($r14, %intconst10)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00226: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00226: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[88@L98] invokevirtual $r55.write($r25)",
    "var" : "$r25",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest00029: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[62@L82] $r13 = invokeinterface $r12.encodeForBase64($r5, %intconst6)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest00029: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest00029: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[67@L80] invokevirtual $r48.write($r16)",
    "var" : "$r16",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
}, {
  "judgeType" : "CompositeRule",
  "issues" : [ {
    "judgeType" : "Predictable Source",
    "message" : "The value of the API is not well randomized",
    "sourceStmt" : "<org.owasp.benchmark.testcode.BenchmarkTest02393: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[60@L81] $r21 = invokeinterface $r20.encodeForBase64($r13, %intconst5)",
    "sourceMethod" : "<org.owasp.benchmark.testcode.BenchmarkTest02393: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>",
    "callSite" : "<org.owasp.benchmark.testcode.BenchmarkTest02393: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>[65@L79] invokevirtual $r48.write($r24)",
    "var" : "$r24",
    "calleeMethod" : "<java.io.Writer: void write(java.lang.String)>",
    "subSignature" : "void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
  } ]
} ]